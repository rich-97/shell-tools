#!/usr/bin/env bash

usage="\
Usage: run file [-o [dir]]
    -o, If the file is compiled the binary will output in dir
    otherwise the output will ./bin."

print_usage () {
  echo "$usage"; exit 1
}

var_dir=

bin_dir () {
  if [ -z "$1" ]; then
    if [ -d bin ]; then
      var_dir="bin"
    else
      mkdir bin; var_dir="bin"
    fi
  else
    mkdir "$1"; var_dir="$1"
  fi
}

run_file () {
  file=$1
  ext=$(path -e "$1")
  base=$(path -B "$file")

  case $ext in
    c)
      if [ -z "$var_dir" ]; then
        gcc "$file" -o "$base"; ./"$base"
      else
        gcc "$file" -o "$var_dir/$base"; "$var_dir/$base"
      fi
    ;;
  cpp|cc|c++)
      if [ -z "$var_dir" ]; then
        g++ "$file" -o "$base"; ./"$base"
      else
        g++ "$file" -o "$var_dir/$base"; "$var_dir/$base"
      fi
    ;;
  js) command env nodejs "$file";;
  py) command env python "$file";;
  php) command env php "$file";;
  sh) command env bash "$file";;
  java)
    if [ -z "$var_dir" ]; then
      javac "$file"; java "$base"
    else
      javac -d "$var_dir" "$file"; java "$var_dir/$base"
    fi
  ;;
  esac
}

case $# in
  0) print_usage;;
  1) run_file "$1";;
  2) 
    if [ "$2" == -o ]; then
      bin_dir; run_file "$1"
    else
      print_usage
    fi
  ;;
  3)
    if [ "$2" == -o ]; then
      bin_dir "$3"; run_file "$1"
    else
      print_usage
    fi
  ;;
  *) print_usage;;
esac

